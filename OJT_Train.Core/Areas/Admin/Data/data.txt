SELECT * FROM CATEGORY;
-- CATEGORY DATA
INSERT INTO CATEGORY VALUES ('IPhone',GETDATE(),NULL,NULL,NULL,'True','False');
INSERT INTO CATEGORY VALUES ('Mac',GETDATE(),NULL,NULL,NULL, 'True','False');
INSERT INTO CATEGORY VALUES ('Ipad',GETDATE(),NULL,NULL,NULL, 'True','False');
INSERT INTO CATEGORY VALUES ('Watch',GETDATE(),NULL,NULL,NULL, 'True','False');
INSERT INTO CATEGORY VALUES (N'Âm thanh',GETDATE(),NULL,NULL,NULL, 'True','False');
GO;
CREATE PROCEDURE GetAllCategory
AS
BEGIN
	SELECT * FROM CATEGORY
END;
GO;
CREATE PROCEDURE AddCategory
@categoryName NVARCHAR(50), @isPublished VARCHAR(5)
AS
BEGIN
	INSERT INTO CATEGORY VALUES(@categoryName, GETDATE(), NULL, NULL, NULL, @isPublished, 'False')
END;
GO;
CREATE PROCEDURE UpdateCategory @categoryId int, @categoryName NVARCHAR(50), @isPublished VARCHAR(5)
AS
BEGIN
	UPDATE CATEGORY
	SET CATEGORYNAME = @categoryName,
		MODIFIEDDATE = GETDATE(),
		ISPUBLISHED = @isPublished
	WHERE CATEGORYID = @categoryId
END;
GO;

CREATE PROCEDURE DeleteCategory
@categoryId int
AS
BEGIN
	UPDATE CATEGORY
	SET ISPUBLISHED = 'False',
		ISDELETED = 'True',
		MODIFIEDDATE = GETDATE()
	WHERE CATEGORYID = @categoryId
END;

SELECT * FROM PRODUCT;
--DROP PROCEDURE GetAllProduct;
GO;
--GET ALL PRODUCT
CREATE PROCEDURE GetAllProduct
AS 
BEGIN
	SELECT P.*, C.CATEGORYNAME FROM PRODUCT AS P JOIN CATEGORY AS C ON P.CATEGORYID = C.CATEGORYID;
END;
GO;
--GET PRODUCT BY ID
CREATE PROCEDURE GetProductById @productId INT
AS 
BEGIN
	SELECT P.*, C.CATEGORYNAME FROM PRODUCT AS P JOIN CATEGORY AS C ON P.CATEGORYID = C.CATEGORYID WHERE P.PRODUCTID = @productId;
END
GO;

--ADD NEW PRODUCT
CREATE PROCEDURE AddProduct 
@productName NVARCHAR(100), @memory VARCHAR(50), @priceOld INT, @productDetail NVARCHAR(MAX),
@categoryId INT, @isPublished VARCHAR(5), @imageProduct VARCHAR(1000)
AS 
BEGIN
	INSERT INTO PRODUCT VALUES(@productName, @memory, @priceOld,'',@productDetail, GETDATE(),NULL,NULL,NULL,@isPublished,'False',@categoryId,@imageProduct);
END;
GO;
--DELETE PRODUCT
CREATE PROCEDURE DeleteProduct @productId int
AS 
BEGIN
	UPDATE PRODUCT
	SET ISPUBLISHED = 'False',
		ISDELETED = 'True'
	WHERE PRODUCTID = @productId
END;
GO;
--UPDATE PRODUCT
CREATE PROCEDURE UpdateProduct 
@productId INT, @productName NVARCHAR(100), @memory VARCHAR(50), @priceOld INT, 
@productDetail NVARCHAR(MAX), @categoryId INT, @isPublished VARCHAR(5), @imageProduct VARCHAR(1000)
AS
BEGIN
	UPDATE PRODUCT
	SET PRODUCTNAME = @productName,
		MEMORY = @memory,
		PRICEOLD = @priceOld,
		PRODUCTDETAIL = @productDetail,
		MODIFIEDDATE = GETDATE(),
		IMAGEPRODUCT = @imageProduct,
		ISPUBLISHED = @isPublished,
		CATEGORYID = @categoryId
	WHERE PRODUCTID = @productId;
END;
GO;
-- SELECT CATEGORIES AVAILABLE
CREATE PROCEDURE GetPublishedCategories 
AS 
BEGIN
	SELECT C.CATEGORYID, C.CATEGORYNAME FROM CATEGORY AS C WHERE C. ISPUBLISHED = 'True';
END;
GO
-- SELECT PRODUCT AVAILABLE
CREATE PROCEDURE GetValidProducts
AS 
BEGIN
	SELECT PRODUCTID, PRODUCTNAME FROM PRODUCT WHERE ISPUBLISHED = 'True' AND ISDELETED = 'False';
END;
GO;


-- IPHONE 15 PRO MAX
INSERT INTO PRODUCT VALUES (N'Iphone 15 Pro Max', '256 GB', 33090000, '','Detail product',GETDATE(),NULL,NULL,NULL,'True', 'False',1,'test');
INSERT INTO PRODUCT VALUES (N'Iphone 15 Pro Max', '512 GB', 39690000, '','Detail product',GETDATE(),NULL,NULL,NULL,'True', 'False',1,'test');
INSERT INTO PRODUCT VALUES (N'Iphone 15 Pro Max', '1 TB', 46990000, '','Detail product',GETDATE(),NULL,NULL,NULL,'True', 'False',1,'test');

-- IPHONE 15 PRO
INSERT INTO PRODUCT VALUES (N'Iphone 15 Pro', '128 GB', 28990000, '','Detail product',GETDATE(),NULL,NULL,NULL,'True', 'False',1,'test');
INSERT INTO PRODUCT VALUES (N'Iphone 15 Pro', '256 GB', 31790000, '','Detail product',GETDATE(),NULL,NULL,NULL,'True', 'False',1,'test');
INSERT INTO PRODUCT VALUES (N'Iphone 15 Pro', '512 GB', 37990000, '','Detail product',GETDATE(),NULL,NULL,NULL,'True', 'False',1,'test');
INSERT INTO PRODUCT VALUES (N'Iphone 15 Pro', '1 TB', 43490000, '','Detail product',GETDATE(),NULL,NULL,NULL,'True', 'False',1,'test');

-- IPAD PRO
INSERT INTO PRODUCT VALUES (N'iPad Pro M2 11" Wi-Fi', '512 GB', 30990000, '','Detail product',GETDATE(),NULL,NULL,NULL,'True', 'False',3,'test2');
INSERT INTO PRODUCT VALUES (N'iPad Pro M2 11" Wi-Fi(TEST)', '512 GB', 30990000, '','Detail product',GETDATE(),NULL,NULL,NULL,'True', 'False',3,'test2');

-- INVENTORY
INSERT INTO INVENTORY VALUES (N'Kho Tổng');
-- SALE PRODUCT 1
INSERT INTO SALE VALUES(1,100, 30000000, GETDATE(), NULL,NULL, NULL, 'False');
-- SALE PRODUCT 2
INSERT INTO SALE VALUES(2,80, 33000000, GETDATE(), NULL,NULL, NULL, 'False');
-- SALE PRODUCT 3
INSERT INTO SALE VALUES(3,90, 36000000, GETDATE(), NULL,NULL, NULL, 'False');
INSERT INTO SALE VALUES(3,90, 36000000, GETDATE(), NULL,NULL, NULL, 'False');

SELECT * FROM SALE;
SELECT * FROM PRODUCT;

SELECT * FROM INVENTORYDETAIL;
GO;
-- THONG KE SAN PHAM TRONG KHO
CREATE PROCEDURE GetInforInventory
AS
BEGIN
SELECT I.TOTALIMPORT,I.DELIVERED,I.REMAINING,P.PRODUCTNAME
FROM INVENTORYDETAIL AS I
JOIN PRODUCT AS P ON I.PRODUCTID = P.PRODUCTID
END;
EXEC GetInforInventory
GO;
-- THONG KE DOANH SO
CREATE PROCEDURE THONGKE
AS
	DECLARE @REVENUE BIGINT = (SELECT SUM(CAST(P.PRICEOLD AS BIGINT) * I.DELIVERED)
						FROM INVENTORYDETAIL AS I
						JOIN PRODUCT AS P ON I.PRODUCTID = P.PRODUCTID
						GROUP BY I.INVENTORYID
						);
	DECLARE @COST BIGINT = (SELECT SUM(QUANTITY*CAST(UNITPRICE AS BIGINT)) FROM SALE WHERE ISDELETED = 0)
	DECLARE @PROFIT BIGINT = @REVENUE - @COST;
BEGIN
	SELECT @REVENUE AS REVENUE, @COST AS COST, @PROFIT AS PROFIT
END;
GO;
-- ORDER
SELECT * FROM PRODUCT;
SELECT * FROM [ORDERDETAIL];

INSERT INTO [ORDER] VALUES(119770000, GETDATE(), NULL, 'nguyenvanduc@gmail.com', NULL, '02 Quang Trung', NULL, N'Đã đặt hàng','False',1);
INSERT INTO ORDERDETAIL VALUES(1, 1, 33090000, 1);
INSERT INTO ORDERDETAIL VALUES(2, 1, 33090000, 1);
INSERT INTO ORDERDETAIL VALUES(3, 1, 33090000, 1);
GO;
-- GET ORDER INFOR
CREATE PROCEDURE GetOrderInfo
AS
BEGIN
	SELECT * FROM [ORDER]
END;
GO;
-- GET ORDER DETAIL BY ORDERID 
CREATE PROCEDURE GetOrderDetail @orderId INT
AS
BEGIN
	SELECT O.*, P.PRODUCTNAME, P.IMAGEPRODUCT FROM ORDERDETAIL AS O JOIN PRODUCT AS P
	ON O.PRODUCTID = P.PRODUCTID
	WHERE O.ORDERID = @orderId
END;
GO;
-- GET ORDER BY ID
CREATE PROCEDURE GetOrderById @orderId INT
AS
BEGIN
	SELECT O.*, A.ADDRESS AS UserAddress, A.Phone FROM [ORDER] AS O 
	JOIN ACCOUNT AS A ON O.USERID = A.USERID
	WHERE ORDERID = @orderId
END;
GO;
EXEC GetOrderInfo;
EXEC GetOrderDetail @orderId = 1;
EXEC GetOrderById @orderId = 1;